(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[968],{115:()=>{},546:(e,a,o)=>{"use strict";o.d(a,{A:()=>c});var r=o(5155);o(115);var t=o(6874),n=o.n(t),s=o(5700),i=o.n(s);let c=e=>{let{repoName:a,description:o,technologies:t,topics:s,repoURL:c}=e;return(0,r.jsx)(r.Fragment,{children:(0,r.jsxs)("div",{className:"repo-card repo-card-drop-shadow",children:[(0,r.jsxs)("div",{className:"top-card",children:[(0,r.jsx)("img",{className:"repo-owner-avatar",src:"/profile-photo.png",alt:""}),(0,r.jsxs)("div",{className:"repo-title-owner-container",children:[(0,r.jsx)("h6",{className:"repo-title ".concat(i().className),children:a}),(0,r.jsx)("h6",{className:"repo-owner",children:"mikeyfennelly1"})]}),(0,r.jsx)("div",{className:"repo-project-source-code-container",children:(0,r.jsx)(n(),{href:c,target:"_blank",children:(0,r.jsx)("button",{className:"repo-project-source-code-button",children:"Source Code"})})})]}),(0,r.jsx)("p",{className:"repo-description small-separator",children:o}),(0,r.jsx)("div",{className:"repo-topics small-separator",children:null==s?void 0:s.map(e=>(0,r.jsx)("span",{className:"repo-topic",children:e},Math.random()))}),(0,r.jsx)("div",{className:"technologies-container",children:null==t?void 0:t.map(e=>(0,r.jsx)("span",{className:" flex",children:e},Math.random()))})]})})}},2136:(e,a,o)=>{Promise.resolve().then(o.bind(o,9506))},2230:()=>{},3344:(e,a,o)=>{"use strict";o.d(a,{W:()=>s});var r=o(5155),t=o(6314),n=o(546);function s(e){let{projects:a}=e;return(0,r.jsx)(r.Fragment,{children:a.map(e=>(0,r.jsxs)("div",{className:"project-columns",children:[(0,r.jsx)(t.A,{startDate:e.project.startDate,endDate:e.project.endDate,projectName:e.project.projectName,projectBrief:e.project.projectBrief,projectSourceCodeLink:e.project.projectSourceCodeLink},Math.random()),(0,r.jsx)(n.A,{technologies:e.project.technologies,repoName:e.repo.repoName,description:"",repoURL:e.repo.repoURL},Math.random())]},Math.random()))})}},5700:e=>{e.exports={style:{fontFamily:"'GeistMono', ui-monospace, SFMono-Regular, Roboto Mono, Menlo, Monaco, Liberation Mono, DejaVu Sans Mono, Courier New, monospace"},className:"__className_c1e5c9",variable:"__variable_c1e5c9"}},6314:(e,a,o)=>{"use strict";o.d(a,{A:()=>s});var r=o(5155);o(2230);var t=o(5700),n=o.n(t);function s(e){let{projectName:a,projectBrief:o,projectSourceCodeLink:t,technologies:s,videoLink:i,startDate:c,endDate:l}=e;return(0,r.jsx)(r.Fragment,{children:(0,r.jsxs)("div",{className:"medium-separator",children:[t?(0,r.jsx)("h3",{className:"condense accent2 ".concat(n().className),children:a}):(0,r.jsx)("h3",{className:"",children:a}),c&&l?(0,r.jsxs)("h4",{children:[c," - ",l]}):(0,r.jsx)(r.Fragment,{}),(0,r.jsx)("p",{children:o}),(0,r.jsx)("div",{className:"small-separator"})]})})}},9506:(e,a,o)=>{"use strict";o.r(a),o.d(a,{default:()=>s});var r=o(5155),t=o(3344);let n=[{project:{projectName:"mrun",projectBrief:"mrun (mike's runtime) is low-level OCI-compliant container runtime. I have been learning a lot about advanced Linux Kernel features such as namespaces and cgroups, virtual filesystems, virtual networking, seccomp, and all things process isolation. I'm also learning a lot about OCI (Open Container Initiative) specifications so that my project complies with industry standards for runtimes, images, etc. \n\n",technologies:["Linux","Containerization","Go","C"],startDate:"September 2023",endDate:"April 2024"},repo:{repoName:"mrun",description:"A low-level OCI compliant container runtime for modern Linux.\n",repoURL:"https://github.com/mikeyfennelly1/mrun"}},{project:{projectName:"eefenn-cli",projectBrief:"A command-line tool for managing scripts and automation workflows on Ubuntu. I created this tool because it was something that I wanted for some repetitive tasks that were cropping up with eefenn (hence why it is creatively named eefenn-cli). This command-line tool is essentially a command-line manager for local automation tasks. It provides a simple interface to create, manage, and run scripts.",technologies:["Linux","Automation","Go"],startDate:"March 2024",endDate:"April 2024"},repo:{repoName:"eefenn-cli",description:"A tool for managing automation via the shell. Created for Debian/Ubuntu.\n",repoURL:"https://github.com/mikeyfennelly1/eefenn-cli"}},{project:{projectName:"os--char-dev--lkm",projectBrief:"This project was an end-of-block project in college for Operating Systems with Mark. This project was intended to be a demonstration of some of the topics covered; hence, it is a loadable kernel module with an accompanying user-space application. The project that I was a part of was a character device driver to get system information from kernel space and a multithreaded server to serve the data in JSON format to client processes â€“ both written in C.",technologies:["Linux","Device Drivers","C","Unit Testing"],startDate:"March 2024",endDate:"March 2024"},repo:{repoName:"os--char-dev--lkm",description:"Sysinfo character device for operating systems major\n",repoURL:"https://github.com/mikeyfennelly1/os--char-dev--lkm"}}];function s(){return(0,r.jsx)(r.Fragment,{children:(0,r.jsxs)("section",{children:[(0,r.jsx)("h1",{className:"large-padding-gap-top",children:"Linux Kernel Projects"}),(0,r.jsx)("p",{className:"small-separator medium-bottom-separator",children:"Low level operating system technology is a topic that I have been getting very interested in since beginning college. Mark Burkley is a  man who has had huge influence on my work since starting college. This interest of mine has been largely fostered by Mark (perhaps unbeknownst to himself) so I have to give him his flowers for being an inspiration to some of the following work."}),(0,r.jsx)(t.W,{projects:n})]})})}}},e=>{var a=a=>e(e.s=a);e.O(0,[831,244,90,874,441,684,358],()=>a(2136)),_N_E=e.O()}]);